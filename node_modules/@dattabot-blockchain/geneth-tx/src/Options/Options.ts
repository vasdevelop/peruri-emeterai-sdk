export interface IOptions{
    version:string;
    itemAddress:string;
    topic:string;
}

export interface getOptions extends IOptions{
    attestor:string;
}

export interface IAttestOptions extends IOptions{ //ini Interface untuk parameter Attest
    fromAddress:string;
    value:string;
    expiredTime: number;
}

export interface IAttestTxOptions extends IAttestOptions{
    gasLimit:number;
    gasPrice:number;
    nonce: number;
    abi:any;
    attestAddress: string;
    data: any;
}

export class Options {
    // fromAddress:string;
    // version:number;
    // itemAddress:string;
    // topic:string;
    // value:string;
    // expiredTime:number;
    // proxyAddress:string;
    // abi:any;
    // attestAddress: string;
    // data: any;

    constructor(  ){

    }

    static create( option: IOptions): IOptions{
        return {
            version: option.version,
            itemAddress: option.itemAddress,
            topic: option.topic,
        }
    }

    static createAttest ( option: IAttestOptions): IAttestOptions{
        return {
            fromAddress: option.fromAddress ,
            version: option.version,
            itemAddress: option.itemAddress,
            topic: option.topic,
            value: option.value,
            expiredTime: option.expiredTime,
        }
    }

    static createAttestTx ( option: IAttestTxOptions): IAttestTxOptions{
        return {
            fromAddress: option.fromAddress ,
            version: option.version,
            itemAddress: option.itemAddress,
            topic: option.topic,
            value: option.value,
            expiredTime: option.expiredTime,
            nonce: option.nonce,
            abi: option.abi,
            attestAddress: option.attestAddress,
            data: option.data,
            gasLimit: option.gasLimit,
            gasPrice: option.gasPrice
        }
    }
}