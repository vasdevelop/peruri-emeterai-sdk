// import {assert} from 'assert';
const assert = require('assert');
module.exports = async promise => {
    try {
      await promise;
    } catch (error) {
      console.log("ini di expectRevert ", error);
      // TODO: Check jump destination to destinguish between a throw
      //       and an actual invalid jump.
      const invalidOpcode = error.message.search('revert') >= 0;
      // TODO: When we contract A calls contract B, and B throws, instead
      //       of an 'invalid jump', we get an 'out of gas' error. How do
      //       we distinguish this from an actual out of gas event? (The
      //       testrpc log actually show an 'invalid jump' event.)
      const outOfGas = error.message.search('out of gas') >= 0;
      const checksumFailed = error.message.search('capitalization checksum test failed') >= 0;
      assert(
        invalidOpcode || outOfGas || checksumFailed,
        "Expected throw, got '" + error + "' instead",
      );
      return;
    }
    assert.fail('Expected throw not received');
  };